/*
## üß† DRY RUN OF YOUR CODE ‚Äî Step-by-step with Runtime Internals

> ‚úÖ File is parsed ‚Äî all function declarations (`download`, `steps`) are hoisted and available in memory.

---

### üî∑ Line 17: `steps();`
- üìå Call stack: `steps()` is **pushed**
- üîΩ Enters `steps()` (async function)

---

### üî∑ Line 10: Inside `steps()`
- üî∏ `console.log("starting steps");`  
  üñ®Ô∏è Output: `starting steps`

---

### üî∑ Line 12: `const downloadedData = await download("Www.xyz.com");`
- ‚úÖ `download()` is called
- üìå Call stack: `download()` is **pushed**

---

### üî∑ Line 2: Inside `download()`
- üî∏ `console.log("Starting to download data from ", url);`  
  üñ®Ô∏è Output: `Starting to download data from  Www.xyz.com`

---

### üî∑ Line 4: `setTimeout(...)`
- ‚è≥ `down()` callback registered in Web APIs with 6000ms delay
- üì• Will enter **Macrotask Queue** after 6s
- üìå Call stack: `download()` is **popped**

---

### üîÅ Execution suspends at `await`
- Because `await` waits for the promise, the function `steps()` is **suspended**, and its execution context is removed.
- üìå Call stack: `steps()` is **popped**
- ‚úÖ No `.catch()` attached to this `steps()` call.

---

### ‚è±Ô∏è After 6000ms:
- ‚úÖ `down()` enters **Macrotask Queue**
- üîÅ Event loop pulls `down()` in

---

### üî∑ Line 5: Inside `down()`
- üìå Call stack: `down()` is **pushed**
- üî∏ `console.log("Downloading completed");`  
  üñ®Ô∏è Output: `Downloading completed`

---

### üî∑ Line 7: `reject(content);`
- ‚ùå The promise returned by `download()` is **rejected** with `"ABCDEF"`
- üîÅ This rejection is propagated to the suspended `steps()` function
- üî• No `try...catch` block in `steps()` ‚Üí results in **Uncaught Promise Rejection**
- üìå Call stack: `down()` is **popped**

---

### ‚ùå Rejection reaches `steps()` caller
- Since there's no `.catch()` on `steps()` and no global `try...catch`, the error is:


---

### üìÑ Final Console Output:
starting steps  
Starting to download data from  Www.xyz.com  
Downloading completed  
Uncaught (in promise) ABCDEF -> error

---

## ‚úÖ Call stack is empty
## ‚ùó Microtask queue has no handler to catch rejection
## üö® Error bubble remains unhandled
*/


function download(url) {
    return new Promise(function exec(resolve, reject) {
        console.log("Starting to download data from ", url);

        setTimeout(function down() {
            console.log("Downloading completed");
            const content = "ABCDEF";
            reject(content);
        }, 6000);
    });
}

async function steps() {
    console.log("starting steps");

    const downloadedData = await download("Www.xyz.com");

    return downloadedData;
}

steps();
